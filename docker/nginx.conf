user  nginx;

worker_processes  2;
pid        /var/run/nginx.pid;

events {
    worker_connections  512;
}

http {
        sendfile  on;
        server_tokens  off;
        tcp_nodelay  on;
        access_log  /var/log/nginx/access.log;
        default_type  application/octet-stream;
        keepalive_timeout  65;
        error_log  /var/log/nginx/error.log;
        gzip_disable  msie6;
        gzip  on;
        server_names_hash_bucket_size  64;
        tcp_nopush  on;
        types_hash_bucket_size  64;

    server {
        include mime.types;

        set $secure off;
        if ($scheme = https) { set $secure on; }

        set $cors "";
        if ($http_origin ~* (.*\.ihtsdotools.org)) { set $cors "true"; }
        if ($http_origin ~* (.*\.ontoserver.csiro.au)) { set $cors "true"; }

        #proxy_pass directives
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 150;
        proxy_send_timeout 100;
        proxy_read_timeout 100;
        proxy_buffers 4 32k;
        client_max_body_size 1024m;
        client_body_buffer_size 128k;
        proxy_busy_buffers_size    64k;
        proxy_temp_file_write_size 64k;
        proxy_set_header X-Url-Scheme $scheme;
        proxy_set_header X-Forwarded-Ssl $secure;
        proxy_set_header X-Forwarded-Host $host;

        location / {
            add_header Cache-Control "private, no-cache, no-store, must-revalidate";
            add_header Expires "Sat, 01 Jan 2000 00:00:00 GMT";
            add_header Pragma no-cache;
            root /usr/share/nginx/html;
        }

        location /browser {
            alias /usr/share/nginx/html;
        }

        location /snowstorm/snomed-ct/ {
            #
            # Snowstorm running on the local host machine on port 8080.
            # Change this if using a remote server.
            # Change the branch name if you want to target a specific version or extension.
            #
            proxy_pass http://host.docker.internal:8080/;

        }

        location /fhir {
            if ($cors = "true") {
                add_header 'Access-Control-Allow-Origin' "$http_origin";
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers' 'User-Agent,Keep-Alive,Content-Type';
            } if ($request_method = OPTIONS) { return 204; }
            rewrite ^(/fhir/.*)$ /snowstorm/snomed-ct$1;
        }

        location /ecl/ {
            proxy_pass http://localhost:8080/;
        }

    }
}
